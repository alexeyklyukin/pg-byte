TRUNCATE TABLE test;
CREATE INDEX ON test(data);
SET enable_seqscan to 'off';
INSERT INTO test SELECT id, 'one' FROM generate_series(1, 5000) id;
INSERT INTO test SELECT id, 'two' FROM generate_series(5001, 5002) id;
INSERT INTO test SELECT id, 'three' FROM generate_series(5003, 5004) id;
INSERT INTO test SELECT id, 'four' FROM generate_series(5005, 9999) id;
ANALYZE test;
EXPLAIN (ANALYZE, COSTS FALSE, TIMING FALSE, SUMMARY FALSE) SELECT id FROM test WHERE data = 'two';
                           QUERY PLAN                           
----------------------------------------------------------------
 Index Scan using test_data_idx on test (actual rows=2 loops=1)
   Index Cond: (data = 'two'::pg_byte)
(2 rows)

EXPLAIN (ANALYZE, COSTS FALSE, TIMING FALSE, SUMMARY FALSE) SELECT id FROM test WHERE data between 'three' and 'four';
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Index Scan using test_data_idx on test (actual rows=4997 loops=1)
   Index Cond: ((data >= 'three'::pg_byte) AND (data <= 'four'::pg_byte))
(2 rows)

EXPLAIN (ANALYZE, COSTS FALSE, TIMING FALSE, SUMMARY FALSE) SELECT id FROM test WHERE data < 'two';
                            QUERY PLAN                             
-------------------------------------------------------------------
 Index Scan using test_data_idx on test (actual rows=5000 loops=1)
   Index Cond: (data < 'two'::pg_byte)
(2 rows)

EXPLAIN (ANALYZE, COSTS FALSE, TIMING FALSE, SUMMARY FALSE) SELECT id FROM test WHERE data > 'three' and data < 'four';
                               QUERY PLAN                               
------------------------------------------------------------------------
 Index Scan using test_data_idx on test (actual rows=0 loops=1)
   Index Cond: ((data > 'three'::pg_byte) AND (data < 'four'::pg_byte))
(2 rows)

EXPLAIN (ANALYZE, COSTS FALSE, TIMING FALSE, SUMMARY FALSE) SELECT id FROM test WHERE data > 'four';
                           QUERY PLAN                           
----------------------------------------------------------------
 Index Scan using test_data_idx on test (actual rows=0 loops=1)
   Index Cond: (data > 'four'::pg_byte)
(2 rows)

DROP TABLE test;
RESET enable_seqscan;
